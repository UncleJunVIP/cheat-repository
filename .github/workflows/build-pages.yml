name: Deploy CHT Files to GitHub Pages

on:
  push:
    branches: [ "main" ]

  workflow_dispatch:

  schedule:
    - cron: '0 2 * * *'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Clone libretro-database repository
        run: |
          git clone --depth 1 --filter=blob:none --sparse https://github.com/libretro/libretro-database.git temp-repo
          cd temp-repo
          git sparse-checkout set cht

      - name: Copy CHT files to build directory
        run: |
          mkdir -p _site
          cp -r temp-repo/cht/* _site/

      - name: Generate index.html files for each subdirectory
        run: |
          #!/bin/bash
          
          # Function to generate Apache-style directory listing HTML
          generate_index() {
            local dir="$1"
            local relative_path="${dir#_site/}"
            local index_file="$dir/index.html"
          
            cat > "$index_file" << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>Index of /DIRECTORY_PATH</title>
              <style>
                  body { font-family: monospace; margin: 20px; }
                  h1 { font-size: 20px; }
                  table { border-collapse: collapse; margin-top: 20px; }
                  th, td { text-align: left; padding: 2px 10px 2px 2px; }
                  th { background-color: #e0e0e0; }
                  tr:nth-child(even) { background-color: #f5f5f5; }
                  a { color: #0066cc; text-decoration: none; }
                  a:hover { text-decoration: underline; }
              </style>
          </head>
          <body>
              <h1>Index of /DIRECTORY_PATH</h1>
              <table>
                  <tr>
                      <th>Name</th>
                      <th>Last modified</th>
                      <th>Size</th>
                  </tr>
          EOF
          
            # Replace placeholder with actual directory path
            sed -i "s|DIRECTORY_PATH|$relative_path|g" "$index_file"
          
            # Add parent directory link if not root
            if [ "$relative_path" != "" ]; then
              echo "        <tr><td><a href=\"../\">../</a></td><td></td><td>-</td></tr>" >> "$index_file"
            fi
          
            # List directories first, then files
            for item in "$dir"/*; do
              if [ -d "$item" ] && [ "$(basename "$item")" != "." ] && [ "$(basename "$item")" != ".." ]; then
                name="$(basename "$item")/"
                size="-"
                date=$(date -r "$item" "+%d-%b-%Y %H:%M")
                echo "        <tr><td><a href=\"$name\">$name</a></td><td>$date</td><td>$size</td></tr>" >> "$index_file"
              fi
            done
          
            for item in "$dir"/*; do
              if [ -f "$item" ] && [ "$(basename "$item")" != "index.html" ]; then
                name="$(basename "$item")"
                size=$(stat -c%s "$item" 2>/dev/null || stat -f%z "$item")
                date=$(date -r "$item" "+%d-%b-%Y %H:%M")
                echo "        <tr><td><a href=\"$name\">$name</a></td><td>$date</td><td>$size</td></tr>" >> "$index_file"
              fi
            done
          
            cat >> "$index_file" << 'EOF'
              </table>
          </body>
          </html>
          EOF
          }
          
          # Generate index.html for root directory
          generate_index "_site"
          
          # Find all subdirectories and generate index.html for each
          find _site -type d -not -path "_site" | while read -r dir; do
            generate_index "$dir"
          done

      - name: Clean up
        run: rm -rf temp-repo

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4